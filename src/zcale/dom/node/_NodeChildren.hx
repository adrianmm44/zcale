/////////////////////////////////////////////////////////////////////////////////////////////////////////

package zcale.dom.node;

import zcale.dom.node.interfaces.IChildNode;
import zcale.dom.node.interfaces.IElderNode;

class NodeChildren
{	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	private var ids 	 : Array<Int>;
	private var self 	 : IElderNode;
	private var children : Array<IChildNode>;

	public var length( get, null ) : Int;
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public function new( ids : Array<Int>, self : IElderNode )
	{
		this.ids  = ids;
		this.self = self;
		children  = new Array();
	}
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	private function get_length() : Int
	{
		return children.length;
	}
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public function iterator() : Iterator<IChildNode>
	{
		return children.iterator();
	}
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public function add( child : IChildNode ) : Void
	{
		child.parent = self;
		children.push( child );
	}
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public function addIn( child : IChildNode, pos : Int = 0 ) : Void
	{
		child.parent = self;
		children.insert( pos, child );
	}
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public function render() : String
	{
		/*/
		var str = "";
		for( child in children ){
			 str += child.render();
		}
		return str;
		/*/
		return "tjek";
	}
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////