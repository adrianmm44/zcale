/////////////////////////////////////////////////////////////////////////////////////////////////////////

package zcale.dom.node;

import zcale.dom.node.ChildNode;
import zcale.dom.node.TextHatch;
import zcale.dom.node.interfaces.IChildNode;
import zcale.dom.node.interfaces.IElderNode;

class ElderNode<T:ElderNode<T>> extends ChildNode<T> implements IElderNode
{
	/////////////////////////////////////////////////////////////////////////////////////////////////////
		
	public var children   : Array<IChildNode>;
	
	private var textHatch : TextHatch;
		
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public function new( ids : Array<Int>, self : T, name : String )
	{
		super( ids, self, name );
		
		children  = new Array();
		textHatch = new TextHatch( ids, self );
	}
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public function addChild( child : IChildNode ) : Void
	{
		child.parent = self;
		children.push( child );
	}
		
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public override function render() : String
	{
		return rendering.renderElderNode( self );
	}
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////