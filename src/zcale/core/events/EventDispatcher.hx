/////////////////////////////////////////////////////////////////////////////////////////////////////////

package zcale.core.events;

@:expose

class EventDispatcher
{
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	private var instance  : Dynamic;
	private var eventData : EventData;
	private var listeners : Array<Array<(Dynamic->Void)>>;
		
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public function new( instance : Dynamic, eventData : EventData )
	{
		this.instance  = instance;
		this.eventData = eventData;
		this.listeners = new Array();
	}
		
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public function addListener( eventKey : Int, eventListener : (Dynamic->Void) ) : Void
	{		
		if( listeners[ eventKey ] == null ){
			listeners[ eventKey ] = new Array();
		}		
		listeners[ eventKey ].push( eventListener );
	}
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public function removeListener( eventKey : Int, eventListener : (Dynamic->Void) ) : Void
	{
		if( listeners[ eventKey ] != null ){
			listeners[ eventKey ].remove( eventListener );
		}
	}
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public function removeAllListeners() : Void
	{
		listeners = new Array();
	}
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public function dispatch( eventKey : Int ) : Void
	{
		if( listeners[ eventKey ] != null )
		{
			eventData.eventKey = eventKey;
			
			for( eventListener in listeners[ eventKey ] ){
				 eventListener( instance );
			}
		}
	}
		
	/////////////////////////////////////////////////////////////////////////////////////////////////////
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////